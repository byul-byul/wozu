"""add user profile fields

Revision ID: b78cab2f1768
Revises: 60ff6071e2fd
Create Date: 2025-07-24 13:40:17.600500

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b78cab2f1768'
down_revision: Union[str, None] = '60ff6071e2fd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('email_tokens', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.add_column('email_tokens', sa.Column('created_by', sa.Integer(), nullable=True))
    op.add_column('email_tokens', sa.Column('updated_by', sa.Integer(), nullable=True))
    op.add_column('email_tokens', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('email_tokens', sa.Column('is_archived', sa.Boolean(), nullable=False))
    op.alter_column('email_tokens', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('users', sa.Column('phone', sa.String(), nullable=False))
    op.add_column('users', sa.Column('full_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('nick_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('bio', sa.String(), nullable=True))
    op.add_column('users', sa.Column('location', sa.String(), nullable=True))
    op.add_column('users', sa.Column('birth_date', sa.Date(), nullable=True))
    op.add_column('users', sa.Column('gender', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_login_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('photo_url', sa.String(), nullable=True))
    op.add_column('users', sa.Column('is_email_verified', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('is_phone_verified', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.add_column('users', sa.Column('created_by', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('updated_by', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('is_archived', sa.Boolean(), nullable=False))
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_column('users', 'is_archived')
    op.drop_column('users', 'updated_by')
    op.drop_column('users', 'created_by')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'is_phone_verified')
    op.drop_column('users', 'is_email_verified')
    op.drop_column('users', 'photo_url')
    op.drop_column('users', 'last_login_at')
    op.drop_column('users', 'gender')
    op.drop_column('users', 'birth_date')
    op.drop_column('users', 'location')
    op.drop_column('users', 'bio')
    op.drop_column('users', 'nick_name')
    op.drop_column('users', 'full_name')
    op.drop_column('users', 'phone')
    op.alter_column('email_tokens', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('email_tokens', 'is_archived')
    op.drop_column('email_tokens', 'is_active')
    op.drop_column('email_tokens', 'updated_by')
    op.drop_column('email_tokens', 'created_by')
    op.drop_column('email_tokens', 'updated_at')
    # ### end Alembic commands ###
